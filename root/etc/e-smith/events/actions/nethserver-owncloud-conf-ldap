#!/usr/bin/perl

use strict;
use NethServer::SSSD;

sub OCC
{
    my $params = join(" ", @_);
    system("php -d \"magic_quotes_gpc = Off\" /var/www/html/owncloud/occ  $params");
}


# Update user authentication

my $sssd = new NethServer::SSSD();
my $quotedBindPass = $sssd->bindPassword(); $quotedBindPass =~ s/\'/\\'/g;
if ($sssd->isLdap()) {
    OCC "ldap:set-config '' ldapHost '" . $sssd->ldapURI() . "'";
    OCC "ldap:set-config '' ldapPort ".$sssd->port();
    OCC "ldap:set-config '' ldapAgentName '" . $sssd->bindDN() . "'";
    OCC "ldap:set-config '' ldapAgentPassword '$quotedBindPass'";
    OCC "ldap:set-config '' ldapBase ".$sssd->baseDN();
    OCC "ldap:set-config '' ldapBaseGroups ".$sssd->groupDN();
    OCC "ldap:set-config '' ldapBaseUsers ".$sssd->userDN();

    OCC "ldap:set-config '' ldapGroupDisplayName cn";
    OCC "ldap:set-config '' ldapGroupFilter '(&(|(objectclass=posixGroup)))'";
    OCC "ldap:set-config '' ldapGroupFilterObjectclass posixGroup";
    OCC "ldap:set-config '' ldapGroupMemberAssocAttr memberUid";
    OCC "ldap:set-config '' ldapLoginFilter '(&(|(objectclass=inetOrgPerson))(|(uid=%uid)(|(mail=%uid))))'";
    OCC "ldap:set-config '' ldapLoginFilterEmail 1";
    OCC "ldap:set-config '' ldapLoginFilterMode 0";
    OCC "ldap:set-config '' ldapLoginFilterUsername 1";
    OCC "ldap:set-config '' ldapUserDisplayName cn";
    OCC "ldap:set-config '' ldapUserDisplayName2 uid";
    OCC "ldap:set-config '' ldapUserFilter '(|(objectclass=inetOrgPerson))'";
    OCC "ldap:set-config '' ldapUserFilterObjectclass inetOrgPerson";
    OCC "ldap:set-config '' useMemberOfToDetectMembership 0";
    OCC "ldap:set-config '' ldapConfigurationActive 1";
    OCC "ldap:set-config '' turnOffCertCheck 1";
    if($sssd->startTls()) {
        OCC "ldap:set-config '' ldapTLS 1"; # enable starttls on remote ldap providers
    }
} elsif ($sssd->isAD()) {
    OCC "ldap:set-config '' ldapHost '" . $sssd->ldapURI() . "'";
    OCC "ldap:set-config '' ldapPort ".$sssd->port();
    OCC "ldap:set-config '' ldapAgentName '" . $sssd->bindDN() . "'";
    OCC "ldap:set-config '' ldapAgentPassword '$quotedBindPass'";
    OCC "ldap:set-config '' ldapBase ".$sssd->baseDN();
    OCC "ldap:set-config '' ldapBaseGroups ".$sssd->groupDN();
    OCC "ldap:set-config '' ldapBaseUsers ".$sssd->userDN();

    OCC "ldap:set-config '' ldapGroupDisplayName cn";
    OCC "ldap:set-config '' ldapGroupFilter ' (&(objectClass=group)(groupType:1.2.840.113556.1.4.803:=2))'";
    OCC "ldap:set-config '' ldapGroupFilterObjectclass group";
    OCC "ldap:set-config '' ldapGroupMemberAssocAttr member";
    OCC "ldap:set-config '' ldapLoginFilter '(&(&(|(objectclass=person)))(|(samaccountname=%uid)(userPrincipalName=%uid)))'";
    OCC "ldap:set-config '' ldapLoginFilterMode 0";
    OCC "ldap:set-config '' ldapLoginFilterUsername 1";
    OCC "ldap:set-config '' ldapUserDisplayName displayName";
    OCC "ldap:set-config '' ldapUserDisplayName2 samaccountname";
    OCC "ldap:set-config '' ldapUserFilter '(&(|(objectclass=person)))'";
    OCC "ldap:set-config '' ldapUserFilterObjectclass person";
    OCC "ldap:set-config '' turnOffCertCheck 1";
    OCC "ldap:set-config '' useMemberOfToDetectMembership 0";
    OCC "ldap:set-config '' ldapConfigurationActive 1";
    OCC "ldap:set-config '' ldapTLS 0"; # always disable starttls, AD does not support it
} else {
    # SSSD provider not configured, nothing to do
    exit 0;
}
